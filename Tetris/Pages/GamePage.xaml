<Page x:Class="Tetris.Pages.GamePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local_data="clr-namespace:Tetris.Data"
      xmlns:local_converters="clr-namespace:Tetris.ValueConverters"
      xmlns:local_matrices ="clr-namespace:Tetris.Game.Matrices"
      xmlns:ui="http://schemas.modernwpf.com/2019"
      mc:Ignorable="d"
      Loaded="Page_Loaded" Unloaded="Page_Unloaded">
    <Page.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <local_converters:DifficultyToIntConverter x:Key="EnumToIntConverter"/>
            <local_converters:BoolNegationToVisibilityConverter x:Key="BoolNegationToVisibilityConverter"/>
            <local_converters:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter"/>
            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                <Setter Property="FontSize" Value="20"/>
            </Style>
            <Style TargetType="ui:FontIcon">
                <Setter Property="FontFamily" Value="{StaticResource SymbolThemeFontFamily}"/>
            </Style>
        </ResourceDictionary>
    </Page.Resources>
    <Page.DataContext>
        <local_data:GameViewModelEx/>
    </Page.DataContext>
    <ui:SimpleStackPanel Orientation="Horizontal" Spacing="30" HorizontalAlignment="Center" Height="600">
        <ui:SimpleStackPanel.Resources>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="3"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="LightGray" BlurRadius="10" ShadowDepth="3" Direction="270"/>
                    </Setter.Value>
                </Setter>
            </Style>
        </ui:SimpleStackPanel.Resources>
        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
            <Grid.Resources>
                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </Style>
                <Style TargetType="RepeatButton" BasedOn="{StaticResource {x:Type RepeatButton}}">
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition Width="40"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <RepeatButton Grid.Row="0" Grid.Column="0" Click="RotateCounterclockwise_Click">
                <Grid>
                    <TextBlock Text="Z" Visibility="{Binding IsGamepadActive, Converter={StaticResource BoolNegationToVisibilityConverter}}"/>
                    <ui:FontIcon Glyph="&#xF096;" Visibility="{Binding IsGamepadActive, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="#00a2ed"/>
                </Grid>
            </RepeatButton>
            <RepeatButton Grid.Row="0" Grid.Column="1" Click="RotateClockwise_Click">
                <ui:FontIcon Glyph="&#xE971;"/>
            </RepeatButton>
            <RepeatButton Grid.Row="0" Grid.Column="2" Click="RotateClockwise_Click">
                <Grid>
                    <TextBlock Text="X" Visibility="{Binding IsGamepadActive, Converter={StaticResource BoolNegationToVisibilityConverter}}"/>
                    <ui:FontIcon Glyph="&#xF094;" Visibility="{Binding IsGamepadActive, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="#f25127"/>
                </Grid>
            </RepeatButton>
            <RepeatButton Grid.Row="1" Grid.Column="0" Click="MoveLeft_Click">
                <ui:FontIcon Glyph="&#xE973;"/>
            </RepeatButton>
            <RepeatButton Grid.Row="1" Grid.Column="1" Click="MoveDown_Click">
                <ui:FontIcon Glyph="&#xE972;"/>
            </RepeatButton>
            <RepeatButton Grid.Row="1" Grid.Column="2" Click="MoveRight_Click">
                <ui:FontIcon Glyph="&#xE974;"/>
            </RepeatButton>
            <ui:SimpleStackPanel Orientation="Horizontal" Spacing="10" HorizontalAlignment="Center" Grid.Row="0" Grid.Column="3">
                <ui:FontIcon Glyph="&#xE72C;">
                    <ui:FontIcon.RenderTransform>
                        <ScaleTransform ScaleX="-1"/>
                    </ui:FontIcon.RenderTransform>
                    <ui:FontIcon.RenderTransformOrigin>
                        <Point X="0.5" Y="0.5"/>
                    </ui:FontIcon.RenderTransformOrigin>
                </ui:FontIcon>
                <ui:FontIcon Glyph="&#xE72C;"/>
                <ui:FontIcon Glyph="&#xE72C;"/>
            </ui:SimpleStackPanel>
            <TextBlock Text="MOVE" Grid.Row="1" Grid.Column="3"/>
            <RepeatButton Grid.Row="2" Grid.Column="1" Click="Drop_Click">
                <Grid>
                    <ui:FontIcon Glyph="&#xE75D;" Visibility="{Binding IsGamepadActive, Converter={StaticResource BoolNegationToVisibilityConverter}}"/>
                    <ui:FontIcon Glyph="&#xF093;" Visibility="{Binding IsGamepadActive, Converter={StaticResource BooleanToVisibilityConverter}}" Foreground="#7db901"/>
                </Grid>
            </RepeatButton>
            <TextBlock Text="DROP" Grid.Row="2" Grid.Column="3"/>
            <RepeatButton Grid.Row="3" Grid.Column="1" Click="NewGame_Click">
                <Grid>
                    <ui:FontIcon Glyph="&#xE751;" Visibility="{Binding IsGamepadActive, Converter={StaticResource BoolNegationToVisibilityConverter}}"/>
                    <ui:FontIcon Glyph="&#xEDE3;" Visibility="{Binding IsGamepadActive, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </Grid>
            </RepeatButton>
            <TextBlock Text="NEW GAME" Grid.Row="3" Grid.Column="3"/>
            <RepeatButton Grid.Row="4" Grid.Column="1" Click="StopGame_Click">
                <Grid>
                    <TextBlock Text="Esc" Visibility="{Binding IsGamepadActive, Converter={StaticResource BoolNegationToVisibilityConverter}}"/>
                    <ui:FontIcon Glyph="&#xEECA;" Visibility="{Binding IsGamepadActive, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </Grid>
            </RepeatButton>
            <TextBlock Text="STOP GAME" Grid.Row="4" Grid.Column="3"/>
        </Grid>
        <Grid>
            <Border Width="300">
                <local_matrices:MainMatrix x:Name="MainTetrisMatrix"/>
            </Border>
            <Border Visibility="{Binding IsStateTextVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Background="#90eeeeee" VerticalAlignment="Center">
                <Border.Style>
                    <Style TargetType="Border" BasedOn="{StaticResource {x:Type Border}}">
                        <Style.Triggers>
                            <Trigger Property="Visibility" Value="Collapsed">
                                <Setter Property="Opacity" Value="0"/>
                            </Trigger>
                            <Trigger Property="Visibility" Value="Visible">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1.5"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <TextBlock Text="GAME OVER!" Foreground="#647C64" Background="Transparent" FontSize="48" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Border>
        </Grid>
        <Grid>
            <Border Margin="20,0,20,0" Height="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualWidth}" VerticalAlignment="Top">
                <local_matrices:PreviewMatrix x:Name="PreviewTetrisMatrix"/>
            </Border>
            <Grid VerticalAlignment="Center">
                <Grid.Resources>
                    <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                        <Setter Property="BorderBrush" Value="LightGray"/>
                        <Setter Property="Margin" Value="0,1,0,1"/>
                        <Setter Property="Padding" Value="10,0,0,0"/>
                        <Setter Property="Width" Value="100"/>
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="DIFFICULTY" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="0" Grid.Column="0"/>
                <ComboBox ItemsSource="{Binding Difficulties}" SelectedIndex="{Binding Difficulty, Converter={StaticResource EnumToIntConverter}}" IsEnabled="{Binding Path=IsDifficultyChangable}" Grid.Row="0" Grid.Column="2"/>
                <TextBlock Text="LEVEL" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="1" Grid.Column="0"/>
                <ComboBox ItemsSource="{Binding Levels}" SelectedIndex="{Binding Level}" IsEnabled="{Binding Path=IsDifficultyChangable}" Grid.Row="1" Grid.Column="2"/>
                <TextBlock Text="SCORE" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="2" Grid.Column="0"/>
                <TextBlock Text="{Binding Score}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="2" Grid.Column="2"/>
                <TextBlock Text="LINES" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="3" Grid.Column="0"/>
                <TextBlock Text="{Binding LineCount}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="3" Grid.Column="2"/>
                <TextBlock Text="TIME" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="4" Grid.Column="0"/>
                <TextBlock Text="{Binding Time, Converter={StaticResource TimeSpanToStringConverter}}" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="4" Grid.Column="2"/>
            </Grid>
        </Grid>
    </ui:SimpleStackPanel>
</Page>
